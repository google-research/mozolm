# Copyright 2021 MozoLM Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Language modeling package.

package(default_visibility = ["//mozolm:__subpackages__"])

licenses(["notice"])

cc_library(
    name = "language_model_hub",
    srcs = ["language_model_hub.cc"],
    hdrs = ["language_model_hub.h"],
    deps = [
        ":language_model",
        ":lm_scores_cc_proto",
        ":model_config_cc_proto",
        "//mozolm/stubs:integral_types",
        "//mozolm/stubs:logging",
        "//mozolm/stubs:status_macros",
        "//mozolm/utils:utf8_util",
        "@com_google_absl//absl/container:flat_hash_map",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@org_opengrm_ngram//:opengrm-ngram-lib",
    ],
)

cc_library(
    name = "language_model",
    srcs = ["language_model.cc"],
    hdrs = ["language_model.h"],
    deps = [
        ":lm_scores_cc_proto",
        ":model_storage_cc_proto",
        "//mozolm/stubs:integral_types",
        "//mozolm/stubs:logging",
        "//mozolm/utils:utf8_util",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
        "@org_opengrm_ngram//:opengrm-ngram-lib",
    ],
)

cc_test(
    name = "language_model_test",
    srcs = ["language_model_test.cc"],
    deps = [
        ":language_model",
        ":lm_scores_cc_proto",
        "//mozolm/stubs:status-matchers",
        "@com_google_googletest//:gtest_main",
    ],
)

proto_library(
    name = "lm_scores_proto",
    srcs = ["lm_scores.proto"],
)

cc_proto_library(
    name = "lm_scores_cc_proto",
    deps = [":lm_scores_proto"],
)

java_proto_library(
    name = "lm_scores_java_proto",
    deps = [":lm_scores_proto"],
)

proto_library(
    name = "model_storage_proto",
    srcs = ["model_storage.proto"],
    deps = [":ppm_as_fst_model_proto"],
)

cc_proto_library(
    name = "model_storage_cc_proto",
    deps = [":model_storage_proto"],
)

java_proto_library(
    name = "model_storage_java_proto",
    deps = [":model_storage_proto"],
)

proto_library(
    name = "model_config_proto",
    srcs = ["model_config.proto"],
    deps = [":model_storage_proto"],
)

cc_proto_library(
    name = "model_config_cc_proto",
    deps = [":model_config_proto"],
)

java_proto_library(
    name = "model_config_java_proto",
    deps = [":model_config_proto"],
)

cc_library(
    name = "model_factory",
    srcs = ["model_factory.cc"],
    hdrs = ["model_factory.h"],
    deps = [
        ":language_model",
        ":language_model_hub",
        ":model_config_cc_proto",
        ":model_storage_cc_proto",
        ":ngram_char_fst_model",
        ":ppm_as_fst_model",
        ":simple_bigram_char_model",
        "//mozolm/stubs:integral_types",
        "//mozolm/stubs:logging",
        "//mozolm/stubs:status_macros",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/time",
    ],
)

cc_library(
    name = "simple_bigram_char_model",
    srcs = ["simple_bigram_char_model.cc"],
    hdrs = ["simple_bigram_char_model.h"],
    deps = [
        ":language_model",
        ":model_storage_cc_proto",
        "//mozolm/stubs:integral_types",
        "//mozolm/stubs:logging",
        "//mozolm/stubs:status_macros",
        "//mozolm/utils:utf8_util",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/synchronization",
    ],
)

cc_library(
    name = "ngram_char_fst_model",
    srcs = ["ngram_char_fst_model.cc"],
    hdrs = ["ngram_char_fst_model.h"],
    deps = [
        ":language_model",
        ":model_storage_cc_proto",
        "//mozolm/stubs:integral_types",
        "//mozolm/stubs:logging",
        "//mozolm/utils:utf8_util",
        "@com_google_absl//absl/memory",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/strings",
        "@org_openfst//:fst",
        "@org_openfst//:symbol-table",
        "@org_opengrm_ngram//:opengrm-ngram-lib",
    ],
)

cc_test(
    name = "ngram_char_fst_model_test",
    srcs = ["ngram_char_fst_model_test.cc"],
    data = ["testdata/gutenberg_en_char_ngram_o4_wb.fst"],
    deps = [
        ":model_storage_cc_proto",
        ":ngram_char_fst_model",
        "//mozolm/stubs:status-matchers",
        "//mozolm/utils:file_util",
        "//mozolm/utils:utf8_util",
        "@com_google_absl//absl/strings",
        "@com_google_googletest//:gtest_main",
        "@org_openfst//:fst",
    ],
)

cc_library(
    name = "ppm_as_fst_model",
    srcs = ["ppm_as_fst_model.cc"],
    hdrs = ["ppm_as_fst_model.h"],
    deps = [
        ":language_model",
        ":model_storage_cc_proto",
        ":ppm_as_fst_model_cc_proto",
        "//mozolm/stubs:integral_types",
        "//mozolm/stubs:logging",
        "//mozolm/stubs:status_macros",
        "//mozolm/utils:utf8_util",
        "@com_google_absl//absl/container:flat_hash_set",
        "@com_google_absl//absl/memory",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/time",
        "@org_openfst//:fst",
        "@org_openfst//:symbol-table",
        "@org_opengrm_ngram//:opengrm-ngram-lib",
    ],
)

cc_test(
    name = "ppm_as_fst_model_test",
    size = "small",
    srcs = ["ppm_as_fst_model_test.cc"],
    deps = [
        ":model_storage_cc_proto",
        ":ppm_as_fst_model",
        "//mozolm/stubs:status-matchers",
        "//mozolm/utils:utf8_util",
        "@com_google_absl//absl/strings",
        "@com_google_googletest//:gtest_main",
        "@org_openfst//:fst",
        "@org_openfst//:symbol-table",
    ],
)

proto_library(
    name = "ppm_as_fst_model_proto",
    srcs = ["ppm_as_fst_model.proto"],
)

cc_proto_library(
    name = "ppm_as_fst_model_cc_proto",
    deps = [":ppm_as_fst_model_proto"],
)

java_proto_library(
    name = "ppm_as_fst_model_java_proto",
    deps = [":ppm_as_fst_model_proto"],
)
