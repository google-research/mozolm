// Copyright 2025 MozoLM Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Concise information about the model.

syntax = "proto3";

package mozolm;

import "mozolm/models/model_storage.proto";

option java_outer_classname = "ModelConfigProto";

// Next available ID: 4
message ModelConfig {
  enum ModelType {
    // Simple text-based bigram model.
    SIMPLE_CHAR_BIGRAM = 0;

    // OpenGrm NGram character model.
    CHAR_NGRAM_FST = 1;

    // OpenGrm NGram character model.
    PPM_AS_FST = 2;

    // OpenGrm NGram word model.
    WORD_NGRAM_FST = 3;
  }

  // Type of the model.
  ModelType type = 1;

  // Storage and options information.
  ModelStorage storage = 2;

  // Negative log model weight in ensemble.
  double weight = 3;
}

// Next available ID: 7
message ModelHubConfig {
  // Models to be used by LanguageModelHub.
  repeated ModelConfig model_config = 1;

  enum MixtureType {
    // No mixture, just use initial model.
    NONE = 0;

    // Standard interpolation, using model weights.
    INTERPOLATION = 1;
  }

  // Type of the mixture.
  MixtureType mixture_type = 2;

  // String for establishing character vocabulary of hub.
  string vocabulary_string = 3;

  // If set to true, vocabulary_string is treated as a filename.
  bool vocabulary_string_is_filename = 4;

  // Maximum number of ensemble states to maintain. If unset or set to less than
  // 10, default value will be used.
  int32 maximim_maintained_states = 5;

  // Length of history for calculating Bayesian interpolation weights.
  int32 bayesian_history_length = 6;
}
